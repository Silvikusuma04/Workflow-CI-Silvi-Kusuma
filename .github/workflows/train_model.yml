name: CI - Model Training Pipeline

on:
  push:
    branches:
      - main

jobs:
  train-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python and Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.12.9"
          environment-file: MLProject/conda.yaml
          auto-activate-base: false
          activate-environment: mlflow-env
          channels: conda-forge

      - name: Set MLflow Tracking URI with Auth
        run: |
          echo "MLFLOW_TRACKING_URI=https://${{ secrets.DAGSHUB_USERNAME }}:${{ secrets.DAGSHUB_TOKEN }}@dagshub.com/${{ secrets.DAGSHUB_USERNAME }}/padi_forecasting.mlflow" >> $GITHUB_ENV
        shell: bash

      - name: Setup .netrc for DagsHub Auth
        run: |
          echo "machine dagshub.com" > ~/.netrc
          echo "login ${{ secrets.DAGSHUB_USERNAME }}" >> ~/.netrc
          echo "password ${{ secrets.DAGSHUB_TOKEN }}" >> ~/.netrc
          chmod 600 ~/.netrc
        shell: bash

      - name: Run MLflow Project to Train Model
        run: |
          cd MLProject
          conda run -n mlflow-env mlflow run . --env-manager=local
        shell: bash

      - name: Install jq for parsing JSON
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get latest Run ID
        run: |
          RUN_ID=$(conda run -n mlflow-env mlflow runs list --experiment-name "Paddy Yield Forecasting-Tuning" | awk 'NR==2 {print $1}')
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest Run ID: $RUN_ID"
        shell: bash

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USERNAME_DOCKER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image from MLflow Model
        run: |
          conda run -n mlflow-env mlflow models build-docker --model-uri "runs:/${{ env.RUN_ID }}/model" --name "${{ secrets.USERNAME_DOCKER }}/padi-forecasting-model"
          docker push ${{ secrets.USERNAME_DOCKER }}/padi-forecasting-model:latest
        shell: bash
